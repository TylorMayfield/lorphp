<?php

/**
 * This file is auto-generated by LorPHP.
 * Generated on: 2025-05-22 01:28:29
 * 
 * WARNING: Do not edit this file manually.
 * Any changes will be overwritten when the file is regenerated.
 */
namespace LorPHP\Models;

use LorPHP\Core\Model;
use LorPHP\Interfaces\ClientInterface;
use LorPHP\Models\Organization;
use LorPHP\Models\Contact;
use LorPHP\Models\Package;

/**
 * Class Client
 * Represents the Client entity.
 *
 * @property string $id
 * @property string $createdAt
 * @property string $updatedAt
 * @property bool $isActive
 * @property string $modifiedBy
 * @property string $name
 * @property string $email
 * @property string $organizationId
 */
class Client extends Model implements ClientInterface
{
    protected static string $tableName = 'clients';
    protected static $fillable = ['id', 'createdAt', 'updatedAt', 'isActive', 'modifiedBy', 'name', 'email', 'organizationId', 'organization', 'contacts', 'packages'];
                
                
    /**
     * Find a record by its email
     * @param string $email The email to search for
     * @return static|null The record if found, null otherwise
     */
    public static function findByEmail(string $email): ?static
    {
        $db = \LorPHP\Core\Database::getInstance();
        $data = $db->findOne(static::$tableName, ['email' => $email]);
        
        if ($data) {
            $model = new static();
            $model->fill($data);
            return $model;
        }
        
        return null;
    }
                
    /**
     * Get related organization
     * @return Organization[]
     */
    public function organization()
    {
        return $this->belongsTo(Organization::class);
    }
                
    public function getOrganization()
    {
        return $this->organization();
    }

    public function setOrganization($organization): void
    {
        $this->organization = $organization;
    }
                
    /**
     * Get related contacts
     * @return Contact[]
     */
    public function contacts()
    {
        return $this->hasMany(Contact::class);
    }
                
    public function getContacts()
    {
        return $this->contacts();
    }

    public function setContacts($contacts): void
    {
        $this->contacts = $contacts;
    }
                
    /**
     * Get related packages
     * @return Package[]
     */
    public function packages()
    {
        return $this->manyToMany(Package::class);
    }
                
    public function getPackages()
    {
        return $this->packages();
    }

    public function setPackages($packages): void
    {
        $this->packages = $packages;
    }
                
    public function getId()
    {
        return $this->id;
    }

    public function setId($id): void
    {
        $this->id = $id;
    }
                
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    public function setCreatedAt($createdAt): void
    {
        $this->createdAt = $createdAt;
    }
                
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt($updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }
                
    public function getIsActive()
    {
        return $this->isActive;
    }

    public function setIsActive($isActive): void
    {
        $this->isActive = $isActive;
    }
                
    public function getModifiedBy()
    {
        return $this->modifiedBy;
    }

    public function setModifiedBy($modifiedBy): void
    {
        $this->modifiedBy = $modifiedBy;
    }
                
    public function getName()
    {
        return $this->name;
    }

    public function setName($name): void
    {
        $this->name = $name;
    }
                
    public function getEmail()
    {
        return $this->email;
    }

    public function setEmail($email): void
    {
        $this->email = $email;
    }
                
    public function getOrganizationId()
    {
        return $this->organizationId;
    }

    public function setOrganizationId($organizationId): void
    {
        $this->organizationId = $organizationId;
    }}
